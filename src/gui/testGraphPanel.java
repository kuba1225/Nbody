/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import static gui.DataPanel.bodyNumber;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.Ellipse2D;
import static java.lang.Math.abs;
import logic.Nbody;
import logic.Observer;

/**
 *
 * @author Kuba
 */
public class testGraphPanel extends javax.swing.JPanel implements Observer {

    /**
     * Creates new form testGraphPanel
     */
   
    
    int n = bodyNumber;
    private double[][] coordinates;//= new double[n][3]
    private Nbody nbody;

    private double[][] coordinates2D = new double[n][2];
    int licznik = 0;

    @Override
    public void update(double[][] coordinates) {
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < 3; j++) {
                this.coordinates[i][j] = coordinates[i][j];
            }
        }

        System.out.println(licznik + ". Aktualizuję współrżędne");
        licznik++;
        /*try {
            TimeUnit.MILLISECONDS.sleep(250);
        } catch (InterruptedException ex) {
            Logger.getLogger(VisualisationPanel.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        
        
        repaint();
    }

    @Override
    protected void paintComponent(Graphics g) {
         super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setColor(Color.WHITE);
        g2d.fillRect(0, 0, this.getWidth(), this.getHeight());
        g2d.setColor(Color.BLACK);
        

        for (int i = 0; i < n; i++) {
            if (xw < coordinates[i][0]) {
                xw = coordinates[i][0];
            }
            if (yw < coordinates[i][1]) {
                yw = coordinates[i][1];
            }

            int xmax = 750;
            int ymax = 750;

            for (int it = 0; it < n; it++) {
                coordinates2D[it][0] = (xmax / 2) + ((coordinates[it][0] / abs(xw)) * (xmax / 2));
                coordinates2D[it][1] = (ymax / 2) - ((coordinates[it][1] / abs(yw)) * (ymax / 2));
                System.out.println("Konwertuję współrzędne: x=\"" + coordinates2D[it][0] + "\"" + "  y=\"" + coordinates2D[it][1] + "\"");
            }

            drawCircle(g2d);
            
            //System.out.println("test");
        }
    }

    private void drawCircle(Graphics2D g2d) {
        int x, y;
        for (int i = 0; i < n; i++) {
            x = (int) coordinates2D[i][0];
            y = (int) coordinates2D[i][1];
            Ellipse2D.Double circle = new Ellipse2D.Double(x, y, 10, 10);
            g2d.fill(circle);

        }
    }

    public testGraphPanel(Nbody nbody) {
        coordinates = new double[n][3];
        this.nbody = nbody;
        
    }
    private double xw;
    private double yw;
    VisualisationPanel visualisationPanel;

    public void stopObserve() {
        nbody.removeObserver(this);
    }

    /**
     * Creates new form VisualisationPanel
     */
    public testGraphPanel() {
        initComponents();
        repaint();
        System.out.println("Rysuje");
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
